Matching Automatique de Factures à un Relevé Bancaire




Objectif du projet
Vous allez concevoir une mini application web capable de faire correspondre automatiquement les factures à un relevé bancaire, à partir d’images de factures (au format JPG) et d’un relevé bancaire structuré (au format CSV).
L'utilisateur final pourra glisser-déposer un relevé bancaire et un lot de factures scannées, et l’application devra identifier, pour chaque ligne du relevé, la facture correspondante.
Le défi est donc de construire une chaîne complète de traitement intelligent, alliant vision par ordinateur, traitement de texte, logique de rapprochement, et mise en forme web.

Déroulé du projet
Le projet commence lundi matin et le rendu est attendu jeudi à 17h.
Le projet peut se faire en groupe de 3 à 4 étudiants.






Étapes attendues
1. Prise en main du sujet
●	Lisez ce document avec attention.
●	Identifiez clairement le but final de l’application.
●	Explorez les exemples de factures et de relevé bancaire fournis.
2. Définition du cahier des charges
●	Rédigez un cahier des charges décrivant :
○	Les fonctionnalités attendues.
○	Le type d’utilisateur visé.
○	Les données en entrée / sortie.
○	Les contraintes techniques (formats, précision, vitesse, UX).
●	Précisez une roadmap jour par jour.
3. Construction du pipeline de traitement
●	Établissez une architecture claire du pipeline :
○	Lecture et parsing du relevé bancaire.
○	Extraction de texte (OCR) depuis les factures JPG.
○	Nettoyage, structuration, et normalisation des données extraites.
○	Stratégie de matching : comment faire correspondre une facture à une ligne du relevé ?
■	Exemples de critères : montant, date, nom du marchand.



4. État de l’art
●	Faites un rapide état de l’art :
○	Quelles techniques existent pour faire de l’OCR ?
○	Quelles méthodes peut-on utiliser pour faire du matching flou (ex: fuzzy matching) ?
○	Quels outils permettent de déployer une app Streamlit ?
5. Phase de R&D
●	Testez différentes approches pour chaque étape.
●	Essayez plusieurs moteurs d’OCR (Tesseract, EasyOCR, Pixtral, etc.).
●	Travaillez en groupe pour comparer les performances et fiabilités.
6. Intégration dans une application Streamlit
●	Créez une interface simple et intuitive avec Streamlit :
○	Zone de dépôt pour le relevé bancaire.
○	Zone de dépôt pour les factures.
○	Affichage des résultats du matching (sous forme de tableau ou carte).
●	Déployez l’application sur Streamlit Cloud (ou autre service).
7. Rédaction d'une mini documentation
●	Fournissez un document expliquant :
○	L’objectif et le périmètre du projet.
○	Les choix techniques.
○	Comment tester / utiliser l’application.
○	Ce qui fonctionne bien et ce qui peut être amélioré.

Livrables attendus jeudi à 17h
1.	Cahier des charges (PDF ou Markdown).
2.	Lien vers le dépôt GitHub contenant :
○	Le code source de la R&D.
○	Le code de l’application Streamlit.
○	Un fichier README.md clair.
3.	Application déployée et fonctionnelle, prête à l’usage (URL publique).
4.	Mini documentation utilisateur et technique.

💡 Conseils
●	Soyez simples et efficaces.
●	Travaillez en équipe : répartissez les rôles (front-end, OCR, matching...).
●	Commencez petit et améliorez au fur et à mesure.
●	L’approche “pipeline + composants testables” est votre meilleure alliée.

Bon courage à tous, soyez curieux, créatifs et rigoureux !

